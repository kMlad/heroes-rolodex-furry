{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","hero","id","name","email","CardList","heroes","map","SearchBox","type","placeholder","onChange","handleChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","heroArr","this","filteredHeroes","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAgBeA,EAbF,SAACC,GACZ,OACE,sBAAyBC,UAAU,iBAAnC,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,4BAEL,6BAAKL,EAAMI,KAAKE,OAChB,4BAAIN,EAAMI,KAAKG,UANPP,EAAMI,KAAKC,KCSVG,EAVE,SAACR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,OAAOC,KAAI,SAACN,GACjB,OAAO,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKC,UCQ5BM,G,MAbG,SAACX,GACjB,OACE,qBAAKC,UAAU,mBAAf,SACE,uBACEW,KAAK,SACLX,UAAU,SACVY,YAAab,EAAMa,YACnBC,SAAUd,EAAMe,mBCmCTC,E,kDAvCb,aAAe,IAAD,8BACZ,gBAcFD,aAAe,SAACE,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAa,EAAKT,SAAS,CAAET,OAAQkB,S,oBAO/C,WAAU,IAAD,EACyBC,KAAKN,MAA7Bb,EADD,EACCA,OAAQU,EADT,EACSA,YACVU,EAAiBpB,EAAOqB,QAAO,SAAC1B,GAAD,OACnCA,EAAKE,KAAKyB,cAAcC,SAASb,EAAYY,kBAG/C,OACE,sBAAK9B,UAAU,MAAf,UACE,gDACA,oBAAIA,UAAU,aAAd,2BACA,cAAC,EAAD,CACEY,YAAY,gBACZE,aAAca,KAAKb,eAErB,cAAC,EAAD,CAAUN,OAAQoB,W,GAlCRI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.285a70a5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card-styles.css\";\n\nconst Card = (props) => {\n  return (\n    <div key={props.hero.id} className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${props.hero.id}?set=set4&size=180x180`}\n      ></img>\n      <h2>{props.hero.name}</h2>\n      <p>{props.hero.email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport Card from \"../card/card.component.jsx\";\n\nconst CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.heroes.map((hero) => {\n        return <Card hero={hero} key={hero.id} />;\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\nimport \"./search-box-styles.css\";\n\nconst SearchBox = (props) => {\n  return (\n    <div className=\"search-container\">\n      <input\n        type=\"search\"\n        className=\"search\"\n        placeholder={props.placeholder}\n        onChange={props.handleChange}\n      ></input>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box-component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      heroes: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((heroArr) => this.setState({ heroes: heroArr }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { heroes, searchField } = this.state;\n    const filteredHeroes = heroes.filter((hero) =>\n      hero.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Heroes Rolodex</h1>\n        <h2 className=\"sub-header\">Furry edition</h2>\n        <SearchBox\n          placeholder=\"search heroes\"\n          handleChange={this.handleChange}\n        />\n        <CardList heroes={filteredHeroes} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}